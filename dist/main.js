(()=>{"use strict";var n={464:(n,e,t)=>{t.d(e,{A:()=>s});var o=t(354),i=t.n(o),a=t(314),r=t.n(a)()(i());r.push([n.id,".about-panel {\n    display: flex;\n    align-items: center;\n    gap: 30px;\n}\n\n.about-panel img {\n    width: 500px;\n}\n\n.about-info * {\n    font-family: 'Montserrat';\n}\n\n.about-info {\n    color: #ffffff;\n    padding: 50px;\n}\n\n.about-info h1{\n    text-align: center;\n    margin-bottom: 65px;\n}\n\n.about-info p {\n    font-size: 18px;\n    text-align: justify;\n    line-height: 30px;\n    margin-bottom: 25px;\n}","",{version:3,sources:["webpack://./src/css/about.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,cAAc;IACd,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,mBAAmB;IACnB,iBAAiB;IACjB,mBAAmB;AACvB",sourcesContent:[".about-panel {\n    display: flex;\n    align-items: center;\n    gap: 30px;\n}\n\n.about-panel img {\n    width: 500px;\n}\n\n.about-info * {\n    font-family: 'Montserrat';\n}\n\n.about-info {\n    color: #ffffff;\n    padding: 50px;\n}\n\n.about-info h1{\n    text-align: center;\n    margin-bottom: 65px;\n}\n\n.about-info p {\n    font-size: 18px;\n    text-align: justify;\n    line-height: 30px;\n    margin-bottom: 25px;\n}"],sourceRoot:""}]);const s=r},128:(n,e,t)=>{t.d(e,{A:()=>s});var o=t(354),i=t.n(o),a=t(314),r=t.n(a)()(i());r.push([n.id,".page-title {\n    font-family: 'Rocksalt';\n    text-align: center;\n    color: #ffffff;\n}\n\n.menu-list {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 30px;\n    padding: 50px;\n}\n\n.card {\n    border-right: 1px solid #ffffff;\n    padding: 20px;\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    gap: 15px;\n}\n\n.card img {\n    grid-column: 1 / 2;\n    width: 100%;\n    border-radius: 15px;\n}\n\n.item-info {\n    grid-column: 2 / 3;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    font-family: 'Montserrat';\n}\n\n.item-info h3 {\n    color: #ffffff;\n}\n\n.item-info span {\n    color: #dfa335;\n    align-self: flex-end;\n}\n\n.item-info p {\n    color: #b3afaf;\n    text-align: justify;\n}\n\n.item-info button {\n    color: #000000;\n    font-weight: bold;\n    border-style: inset;\n    background-color: #dfa335;\n    width: fit-content;\n    padding-top: 5px;\n    padding-bottom: 5px;\n    padding-right: 10px;\n    padding-left: 10px;\n    align-self: self-end;\n}","",{version:3,sources:["webpack://./src/css/bill.css"],names:[],mappings:"AAAA;IACI,uBAAuB;IACvB,kBAAkB;IAClB,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,qCAAqC;IACrC,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,+BAA+B;IAC/B,aAAa;IACb,aAAa;IACb,8BAA8B;IAC9B,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,yBAAyB;AAC7B;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;IACd,oBAAoB;AACxB;;AAEA;IACI,cAAc;IACd,mBAAmB;AACvB;;AAEA;IACI,cAAc;IACd,iBAAiB;IACjB,mBAAmB;IACnB,yBAAyB;IACzB,kBAAkB;IAClB,gBAAgB;IAChB,mBAAmB;IACnB,mBAAmB;IACnB,kBAAkB;IAClB,oBAAoB;AACxB",sourcesContent:[".page-title {\n    font-family: 'Rocksalt';\n    text-align: center;\n    color: #ffffff;\n}\n\n.menu-list {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 30px;\n    padding: 50px;\n}\n\n.card {\n    border-right: 1px solid #ffffff;\n    padding: 20px;\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    gap: 15px;\n}\n\n.card img {\n    grid-column: 1 / 2;\n    width: 100%;\n    border-radius: 15px;\n}\n\n.item-info {\n    grid-column: 2 / 3;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    font-family: 'Montserrat';\n}\n\n.item-info h3 {\n    color: #ffffff;\n}\n\n.item-info span {\n    color: #dfa335;\n    align-self: flex-end;\n}\n\n.item-info p {\n    color: #b3afaf;\n    text-align: justify;\n}\n\n.item-info button {\n    color: #000000;\n    font-weight: bold;\n    border-style: inset;\n    background-color: #dfa335;\n    width: fit-content;\n    padding-top: 5px;\n    padding-bottom: 5px;\n    padding-right: 10px;\n    padding-left: 10px;\n    align-self: self-end;\n}"],sourceRoot:""}]);const s=r},310:(n,e,t)=>{t.d(e,{A:()=>s});var o=t(354),i=t.n(o),a=t(314),r=t.n(a)()(i());r.push([n.id,".main-panel {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 50px;\n}\n\n.main-panel img{\n    height: calc(100vh - 50px);\n    max-width: 80%;\n}\n\n.home-info h3 {\n    color: #999898;\n}\n\n.home-info p {\n    color: #ffffff;\n    font-size: 35px;\n    margin-top: 30px;\n    margin-bottom: 30px;\n}\n\n.home-info button {\n    border: 1px solid #af552b;\n    color: #ffffff;\n    padding: 15px;\n    border-radius: 30px;\n}","",{version:3,sources:["webpack://./src/css/home.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,0BAA0B;IAC1B,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;IACd,eAAe;IACf,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,yBAAyB;IACzB,cAAc;IACd,aAAa;IACb,mBAAmB;AACvB",sourcesContent:[".main-panel {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 50px;\n}\n\n.main-panel img{\n    height: calc(100vh - 50px);\n    max-width: 80%;\n}\n\n.home-info h3 {\n    color: #999898;\n}\n\n.home-info p {\n    color: #ffffff;\n    font-size: 35px;\n    margin-top: 30px;\n    margin-bottom: 30px;\n}\n\n.home-info button {\n    border: 1px solid #af552b;\n    color: #ffffff;\n    padding: 15px;\n    border-radius: 30px;\n}"],sourceRoot:""}]);const s=r},22:(n,e,t)=>{t.d(e,{A:()=>s});var o=t(354),i=t.n(o),a=t(314),r=t.n(a)()(i());r.push([n.id,".menu {\n    background-color: #0e1214;\n    display: flex;\n    align-items: center;\n    gap: 35px;\n    height: 50px;\n}\n\n.menu * {\n    color: #ffffff;\n}\n\n.menu button:not(.logo) {\n    font-weight: bolder;\n    font-size: 18px;\n}\n\n.logo span {\n    display: flex;\n    align-items: center;\n    fill: #719633;\n    font-size: 25px;\n    font-family: 'Rocksalt';\n    color: #719633;\n}\n\n.logo span svg {\n    width: 50px;\n    height: 50px;\n}\n","",{version:3,sources:["webpack://./src/css/menu.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,YAAY;AAChB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,aAAa;IACb,eAAe;IACf,uBAAuB;IACvB,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB",sourcesContent:[".menu {\n    background-color: #0e1214;\n    display: flex;\n    align-items: center;\n    gap: 35px;\n    height: 50px;\n}\n\n.menu * {\n    color: #ffffff;\n}\n\n.menu button:not(.logo) {\n    font-weight: bolder;\n    font-size: 18px;\n}\n\n.logo span {\n    display: flex;\n    align-items: center;\n    fill: #719633;\n    font-size: 25px;\n    font-family: 'Rocksalt';\n    color: #719633;\n}\n\n.logo span svg {\n    width: 50px;\n    height: 50px;\n}\n"],sourceRoot:""}]);const s=r},208:(n,e,t)=>{t.d(e,{A:()=>f});var o=t(354),i=t.n(o),a=t(314),r=t.n(a),s=t(417),A=t.n(s),c=new URL(t(997),t.b),l=new URL(t(823),t.b),p=r()(i()),u=A()(c),d=A()(l);p.push([n.id,`@font-face {\n    font-family: 'RockSalt';\n    src: url(${u}) format('truetype');\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Montserrat';\n    src: url(${d}) format('truetype');\n    font-style: normal;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbutton {\n    background: none;\n    border: none;\n}\n\nbutton:hover:not(.logo) {\n    cursor: pointer;\n    filter: brightness(.7);\n}\n\n.container {\n    background-color: #12181c;\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,uBAAuB;IACvB,+DAA2D;IAC3D,kBAAkB;AACtB;;AAEA;IACI,yBAAyB;IACzB,+DAAuE;IACvE,kBAAkB;AACtB;;AAEA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,gBAAgB;IAChB,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,sBAAsB;AAC1B;;AAEA;IACI,yBAAyB;AAC7B",sourcesContent:["@font-face {\n    font-family: 'RockSalt';\n    src: url('./fonts/RockSalt-Regular.ttf') format('truetype');\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Montserrat';\n    src: url('./fonts/Montserrat-VariableFont_wght.ttf') format('truetype');\n    font-style: normal;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbutton {\n    background: none;\n    border: none;\n}\n\nbutton:hover:not(.logo) {\n    cursor: pointer;\n    filter: brightness(.7);\n}\n\n.container {\n    background-color: #12181c;\n}"],sourceRoot:""}]);const f=p},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,i,a){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(o)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(r[A]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&r[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),e.push(l))}},e}},417:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(i," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},r=[],s=0;s<n.length;s++){var A=n[s],c=o.base?A[0]+o.base:A[0],l=a[c]||0,p="".concat(c," ").concat(l);a[c]=l+1;var u=t(p),d={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)e[u].references++,e[u].updater(d);else{var f=i(d,o);o.byIndex=s,e.splice(s,0,{identifier:p,updater:f,references:1})}r.push(p)}return r}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var a=o(n=n||[],i=i||{});return function(n){n=n||[];for(var r=0;r<a.length;r++){var s=t(a[r]);e[s].references--}for(var A=o(n,i),c=0;c<a.length;c++){var l=t(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=A}}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,i&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},823:(n,e,t)=>{n.exports=t.p+"7e687123cd4528224ce5.ttf"},997:(n,e,t)=>{n.exports=t.p+"95f10efb43f0ccd46405.ttf"}},e={};function t(o){var i=e[o];if(void 0!==i)return i.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var i=o.length-1;i>-1&&(!n||!/^http(s?):/.test(n));)n=o[i--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0;var o=t(72),i=t.n(o),a=t(825),r=t.n(a),s=t(659),A=t.n(s),c=t(56),l=t.n(c),p=t(540),u=t.n(p),d=t(113),f=t.n(d),m=t(208),g={};g.styleTagTransform=f(),g.setAttributes=l(),g.insert=A().bind(null,"head"),g.domAPI=r(),g.insertStyleElement=u(),i()(m.A,g),m.A&&m.A.locals&&m.A.locals;var b=t(22),B={};B.styleTagTransform=f(),B.setAttributes=l(),B.insert=A().bind(null,"head"),B.domAPI=r(),B.insertStyleElement=u(),i()(b.A,B),b.A&&b.A.locals&&b.A.locals;var h=t(310),C={};C.styleTagTransform=f(),C.setAttributes=l(),C.insert=A().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=u(),i()(h.A,C),h.A&&h.A.locals&&h.A.locals;const I=t.p+"854ddbbf8dbdbea26ee2.jpg",v=function(){const n=document.getElementById("content");n.innerHTML=null,n.innerHTML='<div class="container">\n        <div class="main-panel">\n            <img src="'+I+'" alt="Food">\n            <div class="home-info">\n                <h3>Welcome to Bachira</h3>\n                <p>All the food you can imagine from all over the world in one place</p>\n                <button>Book a table</button>\n            </div>\n        </div>\n    </div>'};var x=t(128),y={};y.styleTagTransform=f(),y.setAttributes=l(),y.insert=A().bind(null,"head"),y.domAPI=r(),y.insertStyleElement=u(),i()(x.A,y),x.A&&x.A.locals&&x.A.locals;const E=t.p+"c8e7a3dd1d43d2809b8b.jpg",w=t.p+"c1bc4dfad7ec7dc6e729.jpg",k=t.p+"63be1d7657e838c272c0.jpg",S=t.p+"86a36695efc12af5f7b7.jpg",T=t.p+"02f6a3965e7a3f2904c2.jpg",j=t.p+"d5d68a613ee07fd17d3d.jpg";var M=t(464),R={};R.styleTagTransform=f(),R.setAttributes=l(),R.insert=A().bind(null,"head"),R.domAPI=r(),R.insertStyleElement=u(),i()(M.A,R),M.A&&M.A.locals&&M.A.locals;const L=t.p+"c792c38b8018591d6513.jpg",z=document.getElementById("home"),q=document.getElementById("bill"),$=document.getElementById("about");document.addEventListener("DOMContentLoaded",v),z.addEventListener("click",v),q.addEventListener("click",(function(){const n=[{name:"Coffee with toast",description:"Hot coffee with three toast and chopped banana.",price:"5.00",image:E},{name:"Gourmet Basil Burger",description:"Burger with tomato, onion rings, basil, cheese and artisan bread.",price:"12.00",image:w},{name:"Spring rolls",description:"Rolls wrapped in rice paper with a filling of shrimp, vegetables and rice noodles. Dipping sauce and tea.",price:"25.00",image:k},{name:"Pancakes",description:"Stacked pancakes, garnished with fresh raspberries and drizzled with maple syrup.",price:"18.00",image:S},{name:"Rice with sautéed vegetables",description:"White rice with carrots, broccoli, cauliflower and green beans.",price:"30.00",image:T},{name:"Stir-fried salad",description:"Broccoli, carrot, pepper and bean salad.",price:"15.00",image:j}],e=document.getElementById("content");var t;e.innerHTML=null,e.innerHTML='<div class="container">\n        <h1 class="page-title">Our dishes</h1>\n        <div class="menu-list">\n        </div>\n    </div>',document.querySelector(".menu-list").innerHTML=(t="",n.forEach((n=>{var e=`<div class="card">\n                <img src="${n.image}" alt="${n.name} image">\n                <div class="item-info">\n                    <h3>${n.name}</h3>\n                    <span>$${n.price}</span>\n                    <p>${n.description}</p>\n                    <button>Order now</button>\n                </div>\n            </div>`;t+=e})),t)})),$.addEventListener("click",(function(){const n=document.getElementById("content");n.innerHTML=null,n.innerHTML=`<div class="container">\n        <div class="about-panel">\n            <div class="about-info">\n                <h1>About Us</h1>\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras dignissim metus ac eros lobortis consectetur. Nulla eu dolor magna. Nulla sem metus, porttitor id justo sit amet, vulputate pretium sapien. Curabitur sed molestie lorem. Suspendisse potenti. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Quisque nec lorem id diam porta blandit eu in eros. Donec imperdiet suscipit placerat. Vestibulum est erat, posuere vel lacus sit amet, fringilla placerat turpis. Quisque vulputate id velit quis dignissim. Duis a risus sed erat consequat interdum eget vel turpis.</p>\n                <p>Etiam ipsum ligula, hendrerit sed sem eu, finibus mattis odio. Curabitur fermentum nulla enim, ut pretium erat tristique vel. In at lacus massa. Praesent fringilla id nunc ut auctor. Maecenas posuere mollis erat id elementum. Suspendisse potenti. Vestibulum non euismod lorem. Maecenas gravida orci in mi mollis, a varius eros sodales. Etiam ac convallis lorem.</p>\n                <p>Vivamus nunc libero, dapibus nec turpis non, volutpat finibus nisi. Fusce finibus pretium mattis. Nam fermentum enim est, sed tincidunt ex fermentum et. Vivamus eu magna id nunc varius scelerisque eu condimentum metus. Maecenas ultricies magna risus, et scelerisque justo sagittis in. Vestibulum finibus nec lectus vel lacinia. Nunc bibendum dapibus dictum. Aliquam risus elit, euismod eu elementum ac, dapibus eget tortor.</p>\n            </div>\n            <img src="${L}" alt="About us image">\n        </div>\n    </div>`}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,